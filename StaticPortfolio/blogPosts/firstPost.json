{
    "title": "First Blog Post - How I created my website, and blog",
    "year": 2017,
    "month": 5,
    "day": 17,
    "img": "/blogs/helloWorld.png",
    "preview": "<p>I've learned so much over the past couple of years. Actually scratch that. I've learned so much over the past semester, and I feel that I have finally reached the point where I can create quality work.</p>",
    "post": [
        "<p>I've learned so much over the past couple of years. Actually scratch that. I've learned so much over the past semester, and I feel that I have finally reached the point where I can create quality work. So as my semester came to an end, and my eventual job search is looming in the distance, I decided it was finally time to create a real portfolio.</p>",
        "<p>When I say real, I mean a complete system. A project that allows me to run a few commands, and bada-boom, my website is automatically updated. In the past my portfolio usually consisted of a bunch of html files strung together, and it was a bit complicated trying to update the site. Eventually I would get busy doing other things and just forget about my site altogether. But this time would be different! This time I was going to make something that I was proud of, and that something is the very thing you are on right now. Now you're probably asking yourself how I got here. Well if you weren't I'm going to tell you anyways because this is my blog and I do what I want!</p>",
        "<h5>Weighing my options</h5>",
        "<p>If you have any experience at all with creating websites you will know there are basically over a million frameworks to choose from. Maybe not literally over a million, but there are a ton of options out there, each with their pros and cons. I thought about these a fair amount before I created this website. <a href='https://wordpress.com/'>Wordpress</a> seemed like a popular choice, but I didn't really feel like dealing with PHP, and it felt a little too cookie cutter. I wanted to create something that allowed me to do a little thinking. I considered one of the few Node.js blog options like <a href='https://ghost.org/'>Ghost</a>, or <a href='http://keystonejs.com/'>Keystone</a>, but I felt they were a little overkill for the content I had. The next logical step was to take a look at a static site generator like <a href='https://jekyllrb.com/'>Jekyll</a>, or <a href='https://gohugo.io/'>Hugo</a>. Those seemed to be more in line with what I was aiming to do, but I still wanted to do something a little different.</p>",
        "<p>After weighing all of my options I decided to create my own static site/one page application generator. You might be thinking this sounds kind of dumb. Why am I reinventing the wheel for this website? Well this is where my own changes come into play. I knew I wanted a static site generator, but I also wanted a problem, something I could work through from start to finish. I find I always learn new technologies and concepts better when I create a project that leverages them. Thus my journey began. I was going to create my very own, very simple, static site generator. I'll call it Corgo, or maybe Corekyll.. The name's still a work in progress.</p>",
        "<h5>Picking the technology</h5>",
        "<p>Now that I have this goal in my head, it's time to pick the tools to build this website. I knew from the very beginning I was going to use <a href='https://vuejs.org/'>Vue.js</a>. Why Vue you ask? I had been using it for a bunch of different projects and I was really comfortable with it. On top of that it allowed me to create this website very fast, like 4-5 hours worth of work fast. If you have no idea what Vue is, it's an MVC framework simliar to Angular or React with less overhead. It enables you to treat a website as a single page application rather than creating lots of html files to be populated later on.</p>",
        "<p>With Vue in place, I needed to decide how I wanted to display my work. Since Vue is driven by the variables you give it, and I only have about 5-6 personal projects, I decided to keep all of my projects in their own javascript object. Vue will grab that projects object, iterate over it, and dynamically create HTML for each project. Now all I have to do in order to add a new project to my website is update the projects object in my Javascript file, and my website would reflect those changes. Having a small snippet about my projects is okay, but in order to properly show them off each project would also need it's own page. Vue solves this problem as well with it's router. Each project is given a special dynamic link on the home page that routes to a dynamically filled projects page which also pulls from the projects object created earlier.</p>",
        "<p>You may now be wondering what is so statically generated about this site.. Well it's not... Atleast not yet! After finishing up the project portion of my website, I decided it would be cool to have a blog section so I could write stuff like this! That's where the statically generated portion comes in. The first thing I thought of for the blog portion of my site was using markdown, and then running a script to consume that markdown and create an object out of it. However as I thought about it in depth, I realized that if I began writing blog posts often, that object would become very big, very fast. Instead I opted to create seperate JSON files for my blog posts. After I write the JSON files, I run a small Node script that takes specific information out of each JSON blog post, and mashes it into one smaller JSON file. My website then calls that JSON file and turns it into an object. This allows me to still take advantage of Vue and using objects to render HTML, while not having to worry too much about the size of the object. Eventually if I created a whole lot of posts, I could change my script to output multiple JSON files that link together.</p>",
        "<p>This section is growing to be longer than I had hoped, but there is one more piece of technology I feel I should mention before moving on. Originally this site was hosted through <a href='https://www.bluehost.com/'>Bluehost</a>, and I would drag and drop my files into the CPanel directory to update it. That sounds really lame right? It was lame, so I decided I wanted to change that. After searching the web for a while I decided to go with a service called <a href='https://surge.sh/'>Surge</a>. Surge is a platform for hosting static websites, which is exactly what I needed. Now all I have to do when I want to publish a new post, or page of my site is run the 'surge' command in my websites directory, and <i>Voila</i>, my site has been updated! If you are looking for a host for your static web page I would highly recommend Surge.</p>",
        "<h5>The futuuuuuuure</h5>",
        "<p>Now that I finally have a solid base for my website there are a few more things I would like to build out for it. The first thing I will need to build is a page that paginates all of my blogs. As of writing this I only have one blog post, which is this one. Eventually I would like to create a blog every week or so, and putting them all on the front page of my website isn't exactly great for user experience.</p>",
        "<p>Creating the blogs section of this website also made me think that I might want to change how my projects section works. I think I may eventually do the same thing to my projects section as I do with my blogs section. Updating my website would be extremely simple that way. I would write a post or project page, run the script to generate the JSON, push my files back to my host, and enjoy the rest of my day!</p>",
        "<p>One last stretch goal is creating an experiments section of my website. I like to play around with the HTML Canvas, and D3.js once in a while. I think it would be super cool to have a section of my site that shows off some code that I have written for those technologies, but aren't necesssarily full projects yet. I still have to sit on this idea for a bit, but I'm hoping to flesh this out soon.</p>",
        "<h5>Thanks!</h5>",
        "<p>Lastly I would like to thank you for reading this far! This is my first blog post, so it may be a bit amateurish, but I hope to improve as I go. If you have any questions about this post, or anything on my website please feel free to contact me, and I will try to get back to you as quickly as I can. Once again thanks for reading!</p>"
    ]
}